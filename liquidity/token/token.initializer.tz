parameter (pair address (pair nat string));
storage
  (pair :storage
     (big_map :accounts
        address
        (pair :account (nat %balance) (map %allowances address nat)))
     (pair (nat %totalSupply) (pair (string %name) (address %owner))));
code { DUP ;
       DIP { CDR @_storage } ;
       CAR @_parameter ;
       DUP ;
       CAR ;
       { DIP { DUP } ; SWAP } ;
       { CDR ; CAR } ;
       { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
       { CDR ; CDR } ;
       PUSH (map address nat) {} ;
       { DIP { { DIP { DUP @totalSupply } ; SWAP } } ; SWAP } ;
       PAIR @owner_account %balance %allowances ;
       { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ;
                 SWAP } } ;
         SWAP } ;
       CAR ;
       { DIP { DUP @owner_account } ; SWAP } ;
       { DIP { { DIP { { DIP { { DIP { { DIP { DUP @owner } ; SWAP } } ; SWAP } } ;
                         SWAP } } ;
                 SWAP } } ;
         SWAP } ;
       DIP { SOME } ;
       UPDATE @accounts ;
       { DIP { { DIP { { DIP { { DIP { DUP @owner } ; SWAP } } ; SWAP } } ;
                 SWAP } } ;
         SWAP } ;
       { DIP { { DIP { { DIP { DUP @name } ; SWAP } } ; SWAP } } ;
         SWAP } ;
       PAIR %name %owner ;
       { DIP { { DIP { { DIP { { DIP { DUP @totalSupply } ; SWAP } } ; SWAP } } ;
                 SWAP } } ;
         SWAP } ;
       PAIR %totalSupply ;
       { DIP { DUP @accounts } ; SWAP } ;
       PAIR %accounts ;
       DIP { DROP } ;
       DIP { DROP } ;
       DIP { DROP } ;
       DIP { DROP } ;
       DIP { DROP } ;
       NIL operation ;
       PAIR ;
       DIP { DROP ; DROP } };
